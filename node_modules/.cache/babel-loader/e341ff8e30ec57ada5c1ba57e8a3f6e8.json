{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/Navina-workgroup/01_dex/b_pancakeswap/pancakeswap-lp-mainnet/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Swap from \"./abis/Swap.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Form, Input, Label, Card, Header, HeaderSubheader } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.getQuote = () => {\n      let _this$state = this.state,\n          address = _this$state.address,\n          amount = _this$state.amount; //await this.state.contract.methods.getExchangeRate(amount, address);\n    };\n\n    this.state = {\n      account: '',\n      contract: null,\n      addressToken1: \"\",\n      addressToken2: \"\",\n      address: \"\",\n      amount: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Swap.networks[networkId];\n\n    if (networkData) {\n      const abi = Swap.abi;\n      const address = networkData.address;\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({\n        contract\n      });\n    } else {\n      window.alert('Smart contract not deployed!');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Velvet.Capital\"), React.createElement(HeaderSubheader, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Exchange Rate\"), React.createElement(Form, {\n      onSubmit: this.getQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress\",\n      name: \"address\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Value\",\n      name: \"amount\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Get exchange rate\")), React.createElement(HeaderSubheader, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Create a 50/50 Portfolio\"), React.createElement(Form, {\n      onSubmit: this.getQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress1\",\n      name: \"addressToken1\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress2\",\n      name: \"addressToken2\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Generate Portfolio!\")), this.state.address);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/Navina-workgroup/01_dex/b_pancakeswap/pancakeswap-lp-mainnet/client/src/App.js"],"names":["React","Component","Swap","detectEthereumProvider","Web3","Grid","Button","Form","Input","Label","Card","Header","HeaderSubheader","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","getQuote","state","address","amount","account","contract","addressToken1","addressToken2","componentDidMount","loadWeb3","loadBlockchainData","provider","console","log","window","web3","accounts","eth","getAccounts","networkId","net","getId","networkData","networks","abi","Contract","alert","render","width","padding","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Swap from \"./abis/Swap.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Form, Input, Label, Card, Header, HeaderSubheader } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      contract: null,\n      addressToken1: \"\",\n      addressToken2: \"\",\n      address: \"\",\n      amount: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n\n    const networkId = await web3.eth.net.getId();\n    const networkData = Swap.networks[networkId];\n    if (networkData) {\n      const abi = Swap.abi;\n      const address = networkData.address;\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } else {\n      window.alert('Smart contract not deployed!')\n    }\n\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  getQuote = () => {\n    let { address, amount } = this.state;\n    //await this.state.contract.methods.getExchangeRate(amount, address);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Header as='h1'>Velvet.Capital</Header>\n        <HeaderSubheader as='h2'>Exchange Rate</HeaderSubheader>\n        <Form onSubmit={this.getQuote}>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress\" name=\"address\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"Value\" name=\"amount\" onChange={this.handleInputChange}></Input><br></br>\n          <Button type=\"submit\" style={{ margin: \"20px\" }}>Get exchange rate</Button>\n        </Form>\n\n        <HeaderSubheader as='h2'>Create a 50/50 Portfolio</HeaderSubheader>\n        <Form onSubmit={this.getQuote}>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress1\" name=\"addressToken1\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress2\" name=\"addressToken2\" onChange={this.handleInputChange}></Input><br></br>\n          <Button type=\"submit\" style={{ margin: \"20px\" }}>Generate Portfolio!</Button>\n        </Form>\n\n\n        {this.state.address}\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}