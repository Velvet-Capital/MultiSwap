{"ast":null,"code":"var _jsxFileName = \"/Users/navinalang/Navina-workgroup/01_dex/b_pancakeswap/pancakeswap-lp-mainnet/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport Swap from \"./abis/Swap.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Form, Input, Label, Card, Header, HeaderSubheader } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.getQuote = async () => {\n      let _this$state = this.state,\n          address = _this$state.address,\n          amount = _this$state.amount;\n      let result = await this.state.contract.methods.getExchangeRate(amount, address).call();\n      this.setState({\n        calculatedOutput: result[1]\n      });\n    };\n\n    this.createPortfolio = async () => {\n      //let {addressToken1, addressToken2} = this.state;\n      //await this.state.contract.methods.generate5050Portfolio(0,0,addressToken1, addressToken2).send({ from: this.state.account, value: this.state.value });\n      let _this$state2 = this.state,\n          addressToken1 = _this$state2.addressToken1,\n          addressToken2 = _this$state2.addressToken2,\n          addressToken3 = _this$state2.addressToken3,\n          addressToken4 = _this$state2.addressToken4,\n          addressToken5 = _this$state2.addressToken5,\n          addressToken6 = _this$state2.addressToken6,\n          addressToken7 = _this$state2.addressToken7,\n          addressToken8 = _this$state2.addressToken8,\n          addressToken9 = _this$state2.addressToken9,\n          addressToken10 = _this$state2.addressToken10;\n      let portfolio = [addressToken1, addressToken2, addressToken3, addressToken4, addressToken5, addressToken6, addressToken7, addressToken8, addressToken9, addressToken10]; //await this.state.contract.methods.generatePortfolioWith10Assets(portfolio).send({ from: this.state.account, value: this.state.value });\n    };\n\n    this.state = {\n      account: '',\n      contract: null,\n      addressToken1: \"\",\n      addressToken2: \"\",\n      addressToken3: \"\",\n      addressToken4: \"\",\n      addressToken5: \"\",\n      addressToken6: \"\",\n      addressToken7: \"\",\n      addressToken8: \"\",\n      addressToken9: \"\",\n      addressToken10: \"\",\n      address: \"\",\n      amount: 0,\n      calculatedOutput: 0,\n      value: 0\n    };\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  } // first up is to detect ethereum provider\n\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider(); // modern browsers\n\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = Swap.networks[networkId];\n\n    if (networkData) {\n      const abi = Swap.abi;\n      const address = networkData.address;\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({\n        contract\n      });\n    } else {\n      window.alert('Smart contract not deployed!');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Velvet.Capital\"), React.createElement(HeaderSubheader, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Exchange Rate\"), React.createElement(Form, {\n      onSubmit: this.getQuote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress\",\n      name: \"address\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Value\",\n      name: \"amount\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Get exchange rate\")), this.state.calculatedOutput, React.createElement(HeaderSubheader, {\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Create a Portfolio with 10 Assets\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"The value will be equally swapped into 10 tokens\"), React.createElement(Form, {\n      onSubmit: this.createPortfolio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress1\",\n      name: \"addressToken1\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress2\",\n      name: \"addressToken2\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress3\",\n      name: \"addressToken3\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress4\",\n      name: \"addressToken4\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress5\",\n      name: \"addressToken5\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress6\",\n      name: \"addressToken6\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress7\",\n      name: \"addressToken7\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress8\",\n      name: \"addressToken8\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress9\",\n      name: \"addressToken9\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"TokenAddress10\",\n      name: \"addressToken10\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Input, {\n      style: {\n        width: \"600px\",\n        padding: 3\n      },\n      required: true,\n      type: \"text\",\n      placeholder: \"Value to send\",\n      name: \"value\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"green\",\n      type: \"submit\",\n      style: {\n        margin: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Generate Portfolio!\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/navinalang/Navina-workgroup/01_dex/b_pancakeswap/pancakeswap-lp-mainnet/client/src/App.js"],"names":["React","Component","Swap","detectEthereumProvider","Web3","Grid","Button","Form","Input","Label","Card","Header","HeaderSubheader","App","constructor","props","handleInputChange","event","target","value","type","checked","name","setState","getQuote","state","address","amount","result","contract","methods","getExchangeRate","call","calculatedOutput","createPortfolio","addressToken1","addressToken2","addressToken3","addressToken4","addressToken5","addressToken6","addressToken7","addressToken8","addressToken9","addressToken10","portfolio","account","componentDidMount","loadWeb3","loadBlockchainData","provider","console","log","window","web3","accounts","eth","getAccounts","networkId","net","getId","networkData","networks","abi","Contract","alert","render","width","padding","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2CC,IAA3C,EAAiDC,MAAjD,EAAyDC,eAAzD,QAAgF,mBAAhF;AACA,OAAO,kCAAP;AAGA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAE1Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2DnBC,iBA3DmB,GA2DEC,KAAD,IAAW;AAC7B,YAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,YAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE;AACA,YAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;AACA,WAAKC,QAAL,CAAc;AACZ,SAACD,IAAD,GAAQH;AADI,OAAd;AAGD,KAlEkB;;AAAA,SAoEnBK,QApEmB,GAoER,YAAY;AAAA,wBACK,KAAKC,KADV;AAAA,UACfC,OADe,eACfA,OADe;AAAA,UACNC,MADM,eACNA,MADM;AAErB,UAAIC,MAAM,GAAG,MAAM,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,OAApB,CAA4BC,eAA5B,CAA4CJ,MAA5C,EAAoDD,OAApD,EAA6DM,IAA7D,EAAnB;AACA,WAAKT,QAAL,CAAc;AACZU,QAAAA,gBAAgB,EAAEL,MAAM,CAAC,CAAD;AADZ,OAAd;AAGD,KA1EkB;;AAAA,SA4EnBM,eA5EmB,GA4ED,YAAY;AAC5B;AACA;AAF4B,yBAexB,KAAKT,KAfmB;AAAA,UAK1BU,aAL0B,gBAK1BA,aAL0B;AAAA,UAM1BC,aAN0B,gBAM1BA,aAN0B;AAAA,UAO1BC,aAP0B,gBAO1BA,aAP0B;AAAA,UAQ1BC,aAR0B,gBAQ1BA,aAR0B;AAAA,UAS1BC,aAT0B,gBAS1BA,aAT0B;AAAA,UAU1BC,aAV0B,gBAU1BA,aAV0B;AAAA,UAW1BC,aAX0B,gBAW1BA,aAX0B;AAAA,UAY1BC,aAZ0B,gBAY1BA,aAZ0B;AAAA,UAa1BC,aAb0B,gBAa1BA,aAb0B;AAAA,UAc1BC,cAd0B,gBAc1BA,cAd0B;AAiB5B,UAAIC,SAAS,GAAG,CACdV,aADc,EAEdC,aAFc,EAGdC,aAHc,EAIdC,aAJc,EAKdC,aALc,EAMdC,aANc,EAOdC,aAPc,EAQdC,aARc,EASdC,aATc,EAUdC,cAVc,CAAhB,CAjB4B,CA6B5B;AACD,KA1GkB;;AAEjB,SAAKnB,KAAL,GAAa;AACXqB,MAAAA,OAAO,EAAE,EADE;AAEXjB,MAAAA,QAAQ,EAAE,IAFC;AAGXM,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,aAAa,EAAE,EAJJ;AAKXC,MAAAA,aAAa,EAAE,EALJ;AAMXC,MAAAA,aAAa,EAAE,EANJ;AAOXC,MAAAA,aAAa,EAAE,EAPJ;AAQXC,MAAAA,aAAa,EAAE,EARJ;AASXC,MAAAA,aAAa,EAAE,EATJ;AAUXC,MAAAA,aAAa,EAAE,EAVJ;AAWXC,MAAAA,aAAa,EAAE,EAXJ;AAYXC,MAAAA,cAAc,EAAE,EAZL;AAaXlB,MAAAA,OAAO,EAAE,EAbE;AAcXC,MAAAA,MAAM,EAAE,CAdG;AAeXM,MAAAA,gBAAgB,EAAE,CAfP;AAgBXd,MAAAA,KAAK,EAAE;AAhBI,KAAb;AAkBD;;AAED,QAAM4B,iBAAN,GAA0B;AACxB,UAAM,KAAKC,QAAL,EAAN;AACA,UAAM,KAAKC,kBAAL,EAAN;AACD,GA3ByB,CA6B1B;;;AACA,QAAMD,QAAN,GAAiB;AACf,UAAME,QAAQ,GAAG,MAAM/C,sBAAsB,EAA7C,CADe,CAGf;;AACA,QAAI+C,QAAJ,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AAEAC,MAAAA,MAAM,CAACC,IAAP,GAAc,IAAIlD,IAAJ,CAAS8C,QAAT,CAAd;AACD,KAJD,MAIO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;AACF;;AAED,QAAMH,kBAAN,GAA2B;AACzB,UAAMK,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,UAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,IAAP,CAAYE,GAAZ,CAAgBC,WAAhB,EAAvB;AACA,SAAKlC,QAAL,CAAc;AAAEuB,MAAAA,OAAO,EAAES,QAAQ,CAAC,CAAD;AAAnB,KAAd;AAEA,UAAMG,SAAS,GAAG,MAAMJ,IAAI,CAACE,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;AACA,UAAMC,WAAW,GAAG3D,IAAI,CAAC4D,QAAL,CAAcJ,SAAd,CAApB;;AACA,QAAIG,WAAJ,EAAiB;AACf,YAAME,GAAG,GAAG7D,IAAI,CAAC6D,GAAjB;AACA,YAAMrC,OAAO,GAAGmC,WAAW,CAACnC,OAA5B;AACA,YAAMG,QAAQ,GAAG,IAAIyB,IAAI,CAACE,GAAL,CAASQ,QAAb,CAAsBD,GAAtB,EAA2BrC,OAA3B,CAAjB;AACA,WAAKH,QAAL,CAAc;AAAEM,QAAAA;AAAF,OAAd;AACD,KALD,MAKO;AACLwB,MAAAA,MAAM,CAACY,KAAP,CAAa,8BAAb;AACD;AAEF;;AAmDDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE,oBAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAIE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAK1C,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAE2C,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,cAA/E;AAA8F,MAAA,IAAI,EAAC,SAAnG;AAA6G,MAAA,QAAQ,EAAE,KAAKpD,iBAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACyJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzJ,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,OAA/E;AAAuF,MAAA,IAAI,EAAC,QAA5F;AAAqG,MAAA,QAAQ,EAAE,KAAKpD,iBAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAEiJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFjJ,EAGE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAoC,MAAA,KAAK,EAAE;AAAEqD,QAAAA,MAAM,EAAE;AAAV,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,CAJF,EAUG,KAAK5C,KAAL,CAAWQ,gBAVd,EAYE,oBAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAbF,EAcE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEiC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,eAA/E;AAA+F,MAAA,IAAI,EAAC,eAApG;AAAoH,MAAA,QAAQ,EAAE,KAAKpD,iBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACgK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhK,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,eAA/E;AAA+F,MAAA,IAAI,EAAC,eAApG;AAAoH,MAAA,QAAQ,EAAE,KAAKpD,iBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAEgK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFhK,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,eAA/E;AAA+F,MAAA,IAAI,EAAC,eAApG;AAAoH,MAAA,QAAQ,EAAE,KAAKpD,iBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAGgK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHhK,EAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,eAA/E;AAA+F,MAAA,IAAI,EAAC,eAApG;AAAoH,MAAA,QAAQ,EAAE,KAAKpD,iBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAIgK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJhK,EAKE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,eAA/E;AAA+F,MAAA,IAAI,EAAC,eAApG;AAAoH,MAAA,QAAQ,EAAE,KAAKpD,iBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAKgK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALhK,EAME,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,eAA/E;AAA+F,MAAA,IAAI,EAAC,eAApG;AAAoH,MAAA,QAAQ,EAAE,KAAKpD,iBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAMgK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANhK,EAOE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,eAA/E;AAA+F,MAAA,IAAI,EAAC,eAApG;AAAoH,MAAA,QAAQ,EAAE,KAAKpD,iBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAOgK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPhK,EAQE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,eAA/E;AAA+F,MAAA,IAAI,EAAC,eAApG;AAAoH,MAAA,QAAQ,EAAE,KAAKpD,iBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAQgK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARhK,EASE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,eAA/E;AAA+F,MAAA,IAAI,EAAC,eAApG;AAAoH,MAAA,QAAQ,EAAE,KAAKpD,iBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EASgK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAThK,EAUE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,gBAA/E;AAAgG,MAAA,IAAI,EAAC,gBAArG;AAAsH,MAAA,QAAQ,EAAE,KAAKpD,iBAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAUkK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVlK,EAWE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAAEmD,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,OAAO,EAAE;AAA3B,OAAd;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,WAAW,EAAC,eAA/E;AAA+F,MAAA,IAAI,EAAC,OAApG;AAA4G,MAAA,QAAQ,EAAE,KAAKpD,iBAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAWwJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXxJ,EAYE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAoC,MAAA,KAAK,EAAE;AAAEqD,QAAAA,MAAM,EAAE;AAAV,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAZF,CAdF,CADF;AAgCD;;AA/IyB;;AAkJ5B,eAAexD,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Swap from \"./abis/Swap.json\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport Web3 from 'web3';\nimport { Grid, Button, Form, Input, Label, Card, Header, HeaderSubheader } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      contract: null,\n      addressToken1: \"\",\n      addressToken2: \"\",\n      addressToken3: \"\",\n      addressToken4: \"\",\n      addressToken5: \"\",\n      addressToken6: \"\",\n      addressToken7: \"\",\n      addressToken8: \"\",\n      addressToken9: \"\",\n      addressToken10: \"\",\n      address: \"\",\n      amount: 0,\n      calculatedOutput: 0,\n      value: 0\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  // first up is to detect ethereum provider\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    // modern browsers\n    if (provider) {\n      console.log('Ethereum wallet is connected');\n\n      window.web3 = new Web3(provider);\n    } else {\n      console.log('No ethereum wallet detected');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await window.web3.eth.getAccounts();\n    this.setState({ account: accounts[0] })\n\n    const networkId = await web3.eth.net.getId();\n    const networkData = Swap.networks[networkId];\n    if (networkData) {\n      const abi = Swap.abi;\n      const address = networkData.address;\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } else {\n      window.alert('Smart contract not deployed!')\n    }\n\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  getQuote = async () => {\n    let { address, amount } = this.state;\n    let result = await this.state.contract.methods.getExchangeRate(amount, address).call();\n    this.setState({\n      calculatedOutput: result[1]\n    })\n  }\n\n  createPortfolio = async () => {\n    //let {addressToken1, addressToken2} = this.state;\n    //await this.state.contract.methods.generate5050Portfolio(0,0,addressToken1, addressToken2).send({ from: this.state.account, value: this.state.value });\n    \n    let {\n      addressToken1,\n      addressToken2,\n      addressToken3, \n      addressToken4, \n      addressToken5, \n      addressToken6, \n      addressToken7, \n      addressToken8, \n      addressToken9, \n      addressToken10\n    } = this.state;\n\n    let portfolio = [\n      addressToken1,\n      addressToken2,\n      addressToken3, \n      addressToken4, \n      addressToken5, \n      addressToken6, \n      addressToken7, \n      addressToken8, \n      addressToken9, \n      addressToken10\n    ]\n    //await this.state.contract.methods.generatePortfolioWith10Assets(portfolio).send({ from: this.state.account, value: this.state.value });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br></br>\n        <Header as='h1'>Velvet.Capital</Header>\n        <HeaderSubheader as='h2'>Exchange Rate</HeaderSubheader>\n        <Form onSubmit={this.getQuote}>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress\" name=\"address\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"Value\" name=\"amount\" onChange={this.handleInputChange}></Input><br></br>\n          <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Get exchange rate</Button>\n        </Form>\n\n        {this.state.calculatedOutput}\n\n        <HeaderSubheader as='h2'>Create a Portfolio with 10 Assets</HeaderSubheader>\n        <p>The value will be equally swapped into 10 tokens</p>\n        <Form onSubmit={this.createPortfolio}>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress1\" name=\"addressToken1\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress2\" name=\"addressToken2\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress3\" name=\"addressToken3\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress4\" name=\"addressToken4\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress5\" name=\"addressToken5\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress6\" name=\"addressToken6\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress7\" name=\"addressToken7\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress8\" name=\"addressToken8\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress9\" name=\"addressToken9\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"TokenAddress10\" name=\"addressToken10\" onChange={this.handleInputChange}></Input><br></br>\n          <Input style={{ width: \"600px\", padding: 3 }} required type=\"text\" placeholder=\"Value to send\" name=\"value\" onChange={this.handleInputChange}></Input><br></br>\n          <Button color=\"green\" type=\"submit\" style={{ margin: \"20px\" }}>Generate Portfolio!</Button>\n        </Form>\n\n      </div >\n    );\n  }\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}